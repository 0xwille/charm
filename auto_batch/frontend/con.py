addTypeAST = 'Add'
ASTParser = 'ASTParser'
binOpTypeAST = 'BinOp'
callValue = 'CallValue'
callTypeAST = 'Call'
dictTypeAST = 'Dict'
dictTypePython = 'dict'
divTypeAST = 'Div'
dotProdType = 'dotprod'
equals = 'Eq()'
expTypeAST = 'Pow'
floatValue = 'FloatValue'
floatTypePython = 'float'
functionArgMap = 'FunctionArgMap'
funcNamesNotToTest = ['__init__', 'visit_FunctionDef']
group = 'group'
groupTypes = ['G1', 'G2', 'GT', 'ZR']
hashType = 'hash'
hashTypesCharm = ['hash', 'H', 'H2']
indexTypeAST = 'Index'
initType = 'init'
integerValue = 'IntegerValue'
intTypePython = 'int'
lambdaArgBegin = 'LAMBDA_ARG_BEGIN'
lambdaArgEnd = 'LAMBDA_ARG_END'
lambdaTypeAST = 'Lambda'
lambdaTypeCharm = 'lambda'
left = 'left'
listTypePython = 'list'
mainFuncName = 'main'
mathOp = ('left', 'op', 'right')
multTypeAST = 'Mult'
nameOnlyTypeAST = 'Name'
numSignatures = 'N'
numTypeAST = 'Num'
pair = 'pair'
randomType = 'random'
returnTypeAST = 'Return'
right = 'right'
self = 'self'
stringName = 'StringName'
stringValue = 'StringValue'
strOnlyTypeAST = 'Str'
strTypeAST = ['Name', 'Str']
strTypePython = 'str'
subTypeAST = 'Sub'
subscriptFields = ('value', 'slice', 'ctx')
subscriptTypeAST = 'Subscript'
subscriptName = 'SubscriptName'
tupleAST = 'elts'
variable = 'Variable'
verifyFuncName = 'verify'
ZR = 'ZR'
opTypesAST = [addTypeAST, divTypeAST, expTypeAST, multTypeAST, subTypeAST]
